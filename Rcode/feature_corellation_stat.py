# -*- coding: utf-8 -*-
"""Feature_corellation_stat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1enj-QQYeGmiF6dfYhCxBQvsTwA5aS5lz

The feature corelationa and source for the future model creation
"""

# Feature correlation main source

# The following code checks for multicollinearity among features in the scaled dataset. It creates a correlation matrix to identify highly correlated features, specifically those with a #correlation greater than 0.90. These highly correlated features are then dropped from the dataset to prevent multicollinearity issues.
# The code also generates a heatmap to visually represent the correlation matrix, helping to identify correlations between features.


def feature_correlation( unnamed_8):
    df = unnamed_8
    # Create correlation matrix
    corr_matrix = df.corr().abs()
    # Select upper triangle of correlation matrix
    upper = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(bool))
    # Find index of feature columns with correlation greater than 0.90
    to_drop = [column for column in upper.columns if any(upper[column] > 0.90)]
    df.drop(to_drop, axis = 1, inplace = True)
    print("Dropped columns due to high correlation:", to_drop)


    plt.rcParams["figure.figsize"] = (20,20)
    matrix = df.corr().round(2)
    sns.heatmap(matrix, annot=True, annot_kws={"fontsize":18})
    plt.xticks(fontsize=18)
    plt.yticks(fontsize=18)
    plt.tight_layout()
    plt.show()
    #print(df.corrwith(df['patient_death_indicator']))
    return  df

"""The following code is done mostly in R that was adopted for the pipeline


- the code matches for the provider  (1 | data_partner_id),
Mixed-effects logistic regression models the probability of an outcome while accounting for both individual predictors (fixed effects) and variability due to groupings or clusters (random effects). This helps get more accurate estimates and better generalization when data are nested or grouped.
"""

library(lme4)

# This is the mixed-effects logistic regression model with 2 cofounders age and race, taking the variation across data partners into account

postpartum_depression_mixedmods1 <- function(feature_correlation) {
  df <- feature_correlation

  mod1 <- glmer(
    postpartum_depression ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator +
                            age +
                            race_White +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod1)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with 2 cofounders age and race, taking the variation across data partners into account

csection_mixedmods1 <- function(feature_correlation) {
  df <- feature_correlation

  mod1 <- glmer(
    postpartum_csection ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator +
                            age +
                            race_White +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod1)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with 2 cofounders age and race, taking the variation across data partners into account

pre_eclampsia_mixedmods1 <- function(feature_correlation) {
  df <- feature_correlation

  mod1 <- glmer(
    pre_eclampsia_combined_1y_during_1y_prior_to_1st_delivery_indicator ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator +
                            age +
                            race_White +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod1)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

Model

library(lme4)

# This is the mixed-effects logistic regression model with all posible cofounders taking the variation across data partners into account

postpartum_depression_mixedmods2 <- function(feature_correlation) {
  df <- feature_correlation

  mod2 <- glmer(
    postpartum_depression ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator +
                            age +
                            race_White +
                            total_number_of_COVID_vaccine_doses +
                            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
                            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
                            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
                            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
                            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
                            total_visits +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod2)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with all posible cofounders taking the variation across data partners into account

csection_mixedmods2 <- function(feature_correlation) {
  df <- feature_correlation

  mod2 <- glmer(
    postpartum_csection ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator +
                            age +
                            race_White +
                            total_number_of_COVID_vaccine_doses +
                            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
                            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
                            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
                            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
                            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
                            total_visits +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod2)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with all posible cofounders taking the variation across data partners into account

pre_eclampsia_mixedmods2 <- function(feature_correlation) {
  df <- feature_correlation

  mod2 <- glmer(
    pre_eclampsia_combined_1y_during_1y_prior_to_1st_delivery_indicator ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator +
                            age +
                            race_White +
                            total_number_of_COVID_vaccine_doses +
                            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
                            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
                            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
                            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
                            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
                            total_visits +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod2)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

# Model next

"""Mixed-effects logistic regression models the probability of an outcome while accounting for both individual predictors (fixed effects) and variability due to groupings or clusters (random effects). This helps get more accurate estimates and better generalization when data are nested or grouped."""

library(lme4)

# This is the mixed-effects logistic regression model with 2 cofounders age and race, taking the variation across data partners into account

postpartum_depression_interaction_mixedmods1 <- function(feature_correlation) {
  df <- feature_correlation

  mod1 <- glmer(
    postpartum_depression ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator*age +
                            race_White +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod1)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with 2 cofounders age and race, taking the variation across data partners into account

csection_interaction_mixedmods1 <- function(feature_correlation) {
  df <- feature_correlation

  mod1 <- glmer(
    postpartum_csection ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator*age +
                            race_White +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod1)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with 2 cofounders age and race, taking the variation across data partners into account

pre_eclampsia_interaction_mixedmods1 <- function(feature_correlation) {
  df <- feature_correlation

  mod1 <- glmer(
    pre_eclampsia_combined_1y_during_1y_prior_to_1st_delivery_indicator ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator*age +
                            race_White +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod1)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

"""Model another version"""

library(lme4)

# This is the mixed-effects logistic regression model with all posible cofounders taking the variation across data partners into account

postpartum_depression_interaction_mixedmods2 <- function(feature_correlation) {
  df <- feature_correlation

  mod2 <- glmer(
    postpartum_depression ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator*age +
                            race_White +
                            total_number_of_COVID_vaccine_doses +
                            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
                            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
                            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
                            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
                            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
                            total_visits +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod2)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with all posible cofounders taking the variation across data partners into account

csection_interaction_mixedmods2 <- function(feature_correlation) {
  df <- feature_correlation

  mod2 <- glmer(
    postpartum_csection ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator*age +
                            race_White +
                            total_number_of_COVID_vaccine_doses +
                            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
                            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
                            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
                            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
                            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
                            total_visits +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod2)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

library(lme4)

# This is the mixed-effects logistic regression model with all posible cofounders taking the variation across data partners into account

pre_eclampsia_interaction_mixedmods2 <- function(feature_correlation) {
  df <- feature_correlation

  mod2 <- glmer(
    pre_eclampsia_combined_1y_during_1y_prior_to_1st_delivery_indicator ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator*age +
                            race_White +
                            total_number_of_COVID_vaccine_doses +
                            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
                            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
                            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
                            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
                            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
                            total_visits +
                            (1 | data_partner_id),
    data = df,
    family = binomial
  )

  # Extract fixed effect estimates
  coefs <- summary(mod2)$coefficients

  # Compute OR and 95% CI manually
  est <- coefs[, "Estimate"]
  se <- coefs[, "Std. Error"]
  OR <- exp(est)
  CI_low <- exp(est - 1.96 * se)
  CI_high <- exp(est + 1.96 * se)
  p <- coefs[, "Pr(>|z|)"]

  result_df <- data.frame(
    term = rownames(coefs),
    OR = OR,
    CI_low = CI_low,
    CI_high = CI_high,
    estimate = est,
    std.error = se,
    statistic = coefs[, "z value"],
    p.value = p,
    row.names = NULL
  )

  return(result_df)
}

"""Interaction model code Adaptation in R coding This R function fits a generalized linear mixed-effects logistic regression model to predict postpartum depression, including an interaction between COVID diagnosis (within 1 year prior to delivery) and age. It adjusts for multiple covariates (race, vaccination, comorbidities, visits) and accounts for clustering by data_partner_id.

Using the ggeffects package, it generates predicted probabilities across age for COVID-positive and COVID-negative groups, then plots these with confidence intervals to visualize how the effect of COVID diagnosis on postpartum depression varies by age.
"""

library(dplyr)
library(ggeffects)
library(ggplot2)
library(lme4)


interaction_plot_postpartum_depression <- function(Total_visits_less2) {
    df <- Total_visits_less2
    df$LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator <- as.factor(
        df$LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator
    )

    mod2 <- glmer(
        postpartum_depression ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator * age +
            race_White +
            total_number_of_COVID_vaccine_doses +
            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
            total_visits +
            (1 | data_partner_id),
        data = df,
        family = binomial
    )

    pred <- ggpredict(mod2, terms = c("age [all]", "LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator"), back.transform = TRUE) #bias_correction = TRUE

    # Recode legend labels
    pred$group <- recode(pred$group, `0` = "Negative", `1` = "Positive")

    plot <- ggplot(pred, aes(x = x, y = predicted, color = group)) +
        geom_line(size = 1.2) +
        geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2, color = NA) +
        labs(
            x = "Age (years)",
            y = "Predicted Probability of Postpartum Depression",
            color = "COVID Diagnosis",
            fill = "COVID Diagnosis",
            title = "Interaction of Age and COVID Diagnosis on Postpartum Depression"
        ) +
        theme_minimal(base_size = 14) +
        theme(legend.position = "right")

    print(plot)
    return(plot)

}

library(dplyr)
library(ggeffects)
library(ggplot2)
library(lme4)

interaction_plot_csection <- function(Total_visits_less2) {
    df <- Total_visits_less2
    df$LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator <- as.factor(
        df$LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator
    )

    mod2 <- glmer(
        postpartum_csection ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator * age +
            race_White +
            total_number_of_COVID_vaccine_doses +
            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
            total_visits +
            (1 | data_partner_id),
        data = df,
        family = binomial
    )

    pred <- ggpredict(mod2, terms = c("age [all]", "LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator"), back.transform = TRUE) #bias_correction = TRUE

    # Recode legend labels
    pred$group <- recode(pred$group, `0` = "Negative", `1` = "Positive")

    plot <- ggplot(pred, aes(x = x, y = predicted, color = group)) +
        geom_line(size = 1.2) +
        geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2, color = NA) +
        labs(
            x = "Age (years)",
            y = "Predicted Probability of Postpartum C-Section",
            color = "COVID Diagnosis",
            fill = "COVID Diagnosis",
            title = "Interaction of Age and COVID Diagnosis on Postpartum C-Section"
        ) +
        theme_minimal(base_size = 14) +
        theme(legend.position = "right")

    print(plot)
    return(plot)

}

library(dplyr)
library(ggeffects)
library(ggplot2)
library(lme4)

interaction_plot_eclampsia <- function(Total_visits_less2) {
    df <- Total_visits_less2
    df$LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator <- as.factor(
        df$LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator
    )

    mod2 <- glmer(
        pre_eclampsia_combined_1y_during_1y_prior_to_1st_delivery_indicator ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator * age +
            race_White +
            total_number_of_COVID_vaccine_doses +
            OBESITY_1y_during_1y_prior_to_1st_delivery_indicator +
            hypertension_1y_during_1y_prior_to_1st_delivery_indicator +
            chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator +
            tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator +
            diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator +
            total_visits +
            (1 | data_partner_id),
        data = df,
        family = binomial
    )

    pred <- ggpredict(mod2, terms = c("age [all]", "LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator"), back.transform = TRUE) #bias_correction = TRUE

    # Recode legend labels
    pred$group <- recode(pred$group, `0` = "Negative", `1` = "Positive")

    plot <- ggplot(pred, aes(x = x, y = predicted, color = group)) +
        geom_line(size = 1.2) +
        geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2, color = NA) +
        labs(
            x = "Age (years)",
            y = "Predicted Probability of (Pre)Eclampsia",
            color = "COVID Diagnosis",
            fill = "COVID Diagnosis",
            title = "Interaction of Age and COVID Diagnosis on (Pre)Eclampsia"
        ) +
        theme_minimal(base_size = 14) +
        theme(legend.position = "right")

    print(plot)
    return(plot)

}

"""Compering nested models:
Model Definitions:

Model 1 (Reduced): Includes basic covariates like COVID diagnosis, age, race, and a random effect for data partner.

Model 2 (Full): Adds vaccine doses, comorbidities (obesity, diabetes, etc.), and total visits.

Model Comparison:

Fits both models using glmer() with a binomial family (logistic regression).

Uses anova(mod1, mod2, test = "Chisq") to conduct a Likelihood Ratio Test (LRT).

Extracts the Chi-square statistic and p-value to evaluate if the full model significantly improves fit.

Outputs:

A summarized DataFrame with:

Outcome label (dv_label)

Chi-squared test statistic (chi_sq)

p-value (p_val)

Formatted p-value (p_val_str)
"""

library(dplyr)
library(lme4)
# Compare the nested models

# generalized linear mixed-effects models (GLMMs).
# Model 1 (reduced) ⊂ Model 2 (full)

# You can test whether the extra predictors in the full model significantly improve the fit using a likelihood ratio test (LRT).

# Note that because the interactions are not significant, and we don't report models with interaction, we don't need to compare models with interaction terms

compare_nested_models <- function(feature_correlation) {

    df <- feature_correlation

    # Function to extract outputs of Likelihood ratio tests
    compare_glmer_models_row <- function(data, outcome_var, dv_label = NULL) {
  if (is.null(dv_label)) dv_label <- outcome_var

  # Model 1 (reduced)
  fixed_mod1 <- paste0(
    outcome_var, " ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator + age + race_White + (1 | data_partner_id)"
  )

  # Model 2 (full)
  fixed_mod2 <- paste0(
    outcome_var, " ~ LL_COVID_diagnosis_1y_during_1y_prior_to_1st_delivery_indicator + age + race_White + ",
    "total_number_of_COVID_vaccine_doses + OBESITY_1y_during_1y_prior_to_1st_delivery_indicator + ",
    "hypertension_1y_during_1y_prior_to_1st_delivery_indicator + chronic_lung_disease_1y_during_1y_prior_to_1st_delivery_indicator + ",
    "tobacco_smoker_1y_during_1y_prior_to_1st_delivery_indicator + diabetes_combined_1y_during_1y_prior_to_1st_delivery_indicator + ",
    "total_visits + (1 | data_partner_id)"
  )

  # Fit models
  mod1 <- glmer(as.formula(fixed_mod1), data = data, family = binomial)
  mod2 <- glmer(as.formula(fixed_mod2), data = data, family = binomial)

  # Likelihood ratio test
  anova_result <- anova(mod1, mod2, test = "Chisq")
  chi_sq <- round(anova_result$Chisq[2], 2)
  p_val <- anova_result$`Pr(>Chisq)`[2]
  p_val_str <- ifelse(p_val < 0.001, "< 0.001", sprintf("%.4f", p_val))

  # Return one row
  return(data.frame(
    dv_label = dv_label,
    chi_sq = chi_sq,
    p_val = p_val,
    p_val_str = p_val_str,
    stringsAsFactors = FALSE
  ))
}
    # Compare 2 models of postpartum depression
    output <- compare_glmer_models_row(data = df, outcome_var = "postpartum_depression", dv_label = "postpartum depression") %>%
    bind_rows(
        compare_glmer_models_row(data = df, outcome_var = "postpartum_csection", dv_label = "C-section")
    ) %>%
    bind_rows(
        compare_glmer_models_row(data = df, outcome_var = "pre_eclampsia_combined_1y_during_1y_prior_to_1st_delivery_indicator", dv_label = "(Pre)eclampsia")
    )

    return(output)

}

"""Cohen Additional interpretation rough approximation, for meta-analysis only, not clinical decision-making
Never substitute it for actual model performance metrics like AUC, calibration, or relative risk.
"""

library(purrr)
library(dplyr)

# Calculate Cohen's d effect size for the models (without interaction terms)
# For now, following this paper
# A simple method for converting an odds ratio to eect size for use in meta-analysis (Susan Chinn, 2000)

# d = ln(OR)/1.81 = estimate/1.81

Cohensd_effect_sizes <- function(feature_correlation) {
    # Postpartum depression: Model 1 and 2 for COVID: 0.558, 0.2673
    # C-section: 0.7408, 0.3858
    # Eclampsia: 0.8857, 0.3883

    logor_summary_df <- function(log_or_list) {
  imap_dfr(log_or_list, function(estimates, dv_label) {
    tibble(
      DV = dv_label,
      Model = paste0("Model ", seq_along(estimates)),
      Estimate = estimates,
      OR = exp(estimates),
      Cohen_d = round(estimates / 1.81, 3)
    )
  })
}

log_or_input <- list(
  "Postpartum Depression (COVID)" = c(0.558, 0.2673),
  "C-section" = c(0.7408, 0.3858),
  "(Pre)Eclampsia" = c(0.8857, 0.3883)
)

output <- logor_summary_df(log_or_input)

return(output)

}